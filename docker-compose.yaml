version: '3'
services:

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    hostname: rabbitmq
    volumes:
      - /var/lib/rabbitmq
    ports:
      - '5672:5672'
      - '15672:15672'
    env_file:
      - .env
    networks:
      - books-club-network


  postgres:
    image: postgres
    hostname: postgres
    container_name: postgres
    env_file:
      - .env
    ports:
      - '5432:5432'
    volumes:
      - ./db/data:/var/lib/postgresql/data
    networks:
      - books-club-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 30s
      retries: 5

  postgres_admin:
    image: dpage/pgadmin4
    env_file:
      - .env
    depends_on:
      - postgres
    ports:
      - '15432:80'
    networks:
      - books-club-network

  api:
    build:
      context: .
      dockerfile: ./apps/microservice-books-club/dockerfile.dev
    ports:
      - '3000:3000'
    env_file:
      - .env
    depends_on:
      - rabbitmq
      - postgres
      - auth
      - books
    volumes:
      - .:/usr/src/app # any change to base folder should be reflected
      - /usr/src/app/node_modules
    command: npm run start:dev microservice-books-club # overrides CMD from dockerfile
    networks:
      - books-club-network

  auth:
    build:
      context: .
      dockerfile: ./apps/auth-service/dockerfile.dev
    env_file:
      - .env
    depends_on:
      - rabbitmq
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    command: npm run start:dev auth-service # overrides CMD from dockerfile
    networks:
      - books-club-network

  books:
    build:
      context: .
      dockerfile: ./apps/books-service/dockerfile.dev
    env_file:
      - .env
    depends_on:
      - rabbitmq
      - postgres
      - auth
    volumes:
      - .:/usr/src/app # any change to base folder should be reflected
      - /usr/src/app/node_modules
    command: npm run start:dev books-service # overrides CMD from dockerfile
    networks:
      - books-club-network


  # redis:
  #   image: redis
  #   command: /bin/sh -c "redis-server --requirepass $$REDIS_PASS"
  #   env_file:
  #     - .env
  #   ports:
  #     - 6379:6379
  #   volumes:
  #     - ./redis/data:/data

networks:
  books-club-network:
    name: books-club-network
